Homefrog v0.1 - Plugin-based Home Automation framework written in C/GObject

Current state: C APIs are more or less in place, no documentation yet, tested
on Raspberry Pi

All plugins are built and installed separately, they can be found under:
"src/plugins". The application will automatically load them at startup.
Plugins are free to load plugin-specific complex data types when basic types
like integer, string, double, etc are not enough.


Features under development:
---------------------------

    * sorting out format for configure files
    * improve REST plugin, add JSON support
    * scene plugin for controlling group of sensors simultaneously from the
        REST Api
    * grovedust plugin for monitoring the air quality in an environment


How to build and run:
---------------------

    only first time:

    aclocal
    autoconf
    automake --add-missing

    and then:

    ./configure
    make
    G_MESSAGES_DEBUG=all ./src/homefrog ./src/homefrog.config


API architecture:
-----------------

+---------------------------------------------------------------+
| Group                                                         |
|                                                               |
| +-----------------+  +---------+                              |
| |                 |  |  Timer  |                              |
| |   Controller    |  +---------+                              |
| |                 |       |                                   |
| +-----------------+       |                                   |
|          |                |                                   |
|          v                v                                   |
| +-----------------------------------------------------------+ |
| |                         EventBUS                          | |
| +-----------------------------------------------------------+ |
|          ^                    ^                     ^         |
|          |                    |                     |         |
| +----------------+   +-----------------+   +----------------+ |
| | ds1820digitemp |   |    telldus      |   |      MySQL     | |
| |    Plugin      |   |     Plugin      |   |     Plugin     | |
| +----------------+   +-----------------+   +----------------+ |
|                                                               |
+---------------------------------------------------------------+


Example 1:
----------

Using the guts of the API to control a heater based on the temperature in the
room and the time:

    /* Turn Heater in the Living room on floor 1 on if the temperature drops
     * below 17C and time is after 19:45.
     */
    ShpBus *bus;
    ShpGroup *group;
    ShpController *controller;
    ShpScene *scene;
    ShpRule *rule;
    ShpMessage *event;
    ShpCondition *condition_temp;
    ShpCondition *condition_time;
    ShpComplextype *complex_type;
    ShpPlugin *rest;
    ShpPlugin *timer;
    ShpPlugin *temperature;
    ShpPlugin *telldus;

    /* load REST plugin */
    rest = shp_plugin_factory_create ("rest", NULL);
    g_object_set (G_OBJECT (rest), "port", 6666, NULL);

    /* load timer */
    timer = shp_plugin_factory_create ("timer", "/clock/timer");

    /* load ds1820digitemp plugin for obtaining temperature readings */
    temperature = shp_plugin_factory_create ("ds1820digitemp",
        "/home/floor1/LivingRoom/Temperature");
    g_object_set (G_OBJECT (temperature), "config-dir", "/home/pi/digitemp/",
        NULL);
    g_object_set (G_OBJECT (temperature), "device-id", "2", NULL);

    /* load telldus plugin for controlling heater */
    telldus = shp_plugin_factory_create ("telldus",
        "/home/floor1/LivingRoom/Heater");
    g_object_set (G_OBJECT (telldus), "device-id", 2, NULL);

    /* create the group and add the event bus, the controller and the plugins to
     * it */
    bus = shp_bus_new ();
    group = shp_group_new (bus);
    controller = shp_controller_new ();
    shp_group_add (group, SHP_COMPONENT (controller));
    shp_group_add (group, SHP_COMPONENT (rest));
    shp_group_add (group, SHP_COMPONENT (timer));
    shp_group_add (group, SHP_COMPONENT (temperature));
    shp_group_add (group, SHP_COMPONENT (telldus));

    /* create scene with one event */
    scene = shp_scene_new (g_object_ref (bus));
    event = shp_message_new_command ("/home/floor1/LivingRoom/Heater");
    shp_message_add_string (event, "command", "on");
    shp_scene_add_event (scene, event);

    /* create the 2 conditions to be checked before activating the scene */
    condition_temp = shp_condition_new ("/home/floor1/LivingRoom/Temperature");
    shp_condition_add_double_option (condition_temp, "temperature", 15,
        SHP_CONDITION_OPERATOR_GT);

    condition_time = shp_condition_new ("/clock/timer");
    complex_type = shp_complextype_factory_create ("timer.time");
    shp_complextype_add_integer (complex_type, "hour", 19);
    shp_complextype_add_integer (complex_type, "minutes", 45);
    shp_condition_add_complextype_option (condition_time, "datetime",
        complex_type, SHP_CONDITION_OPERATOR_GT);

    /* add 2 conditions and scene to rule */
    rule = shp_rule_new ();
    shp_rule_add_condition (rule, condition_temp);
    shp_rule_add_condition (rule, condition_time);
    shp_rule_set_scene (rule, scene);

    /* let the controller know about our new rule */
    shp_controller_add_rule (controller, rule);

    /* now start the group */
    shp_component_start (SHP_COMPONENT (group));

    /* the group owns and manages all objects added to it, they will be
     * automatically freed when the group itself is freed */

Accessing the REST Api:
-----------------------

to display all sensors at home and their status:
http://192.168.0.240:6666/home

to display all sensors in the Living room and their status:
http://192.168.0.240:6666/home/floor1/LivingRoom

to display status for the Heater in the Living room:
http://192.168.0.240:6666/home/floor1/LivingRoom/Heater

to activate the Heater in the Living room on floor 1:
http://192.168.0.240:6666/home/floor1/LivingRoom/Heater?command=on

to activate scene "MovieTime":
http://192.168.0.240:6666/home/floor1/LivingRoom/MovieTime?status=active
