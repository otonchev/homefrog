Homefrog v0.1 - Plugin-based Home Automation framework written in C/GObject

Current state: C APIs are more or less in place, no documentation yet, tested
on Raspberry Pi

Code is designed for efficiency and testability, although no unit tests are
available yet ;-)

All plugins are built and installed separately, they can be found under:
"src/plugins" for the sources and all .so files are built in
"src/plugins/.libs/". The application will automatically load them at startup.
Plugins are free to load plugin-specific complex data types as well when basic
types like integer, string, double, etc are not enough.

Plugins are documented in docs/plugins.txt

Features under development:
---------------------------

    * sorting out format for configure files (so that app can be configured
          without writing C-code :-))
    * improving REST plugin
    * implementing grovedust plugin for monitoring the air quality in an
          environment(PM2.5)
    * Web pages (not really started yet, working on necessary underlying
          infrastructure, although creating simple Web UI can be done with no
          effort even today)


How to build and run:
---------------------

    only first time:

    aclocal
    autoconf
    automake --add-missing

    and then:

    ./configure
    make
    G_MESSAGES_DEBUG=all ./src/homefrog ./src/homefrog.config


API architecture:
-----------------

+---------------------------------------------------------------+
| Group                                                         |
|                                                               |
| +-----------------+  +---------+                              |
| |                 |  |  Timer  |                              |
| |   Controller    |  +---------+                              |
| |                 |       |                                   |
| +-----------------+       |                                   |
|          |                |                                   |
|          v                v                                   |
| +-----------------------------------------------------------+ |
| |                         EventBUS                          | |
| +-----------------------------------------------------------+ |
|          ^                    ^                     ^         |
|          |                    |                     |         |
| +----------------+   +-----------------+   +----------------+ |
| | ds1820digitemp |   |    telldus      |   |      MySQL     | |
| |    Plugin      |   |     Plugin      |   |     Plugin     | |
| +----------------+   +-----------------+   +----------------+ |
|                                                               |
+---------------------------------------------------------------+


Example 1:
----------

Using the guts of the API to control a heater based on the temperature in the
room and the time:

    /* Turn Heater in the Living room on floor 1 on if the temperature drops
     * below 17C and time is after 19:45.
     */
    ShpBus *bus;
    ShpGroup *group;
    ShpController *controller;
    ShpScene *scene;
    ShpHttp *http;
    ShpRule *rule;
    ShpMessage *event;
    ShpCondition *condition_temp;
    ShpCondition *condition_time;
    ShpComplextype *complex_type;
    ShpPlugin *rest;
    ShpPlugin *timer;
    ShpPlugin *temperature;
    ShpPlugin *telldus;

    /* load REST plugin */
    http = shp_http_new (6666);
    rest = shp_plugin_factory_create ("rest", NULL);
    g_object_set (G_OBJECT (rest), "http", http, NULL);
    g_signal_emit_by_name (G_OBJECT (rest), "add-device-path", "/home*");

    /* load timer */
    timer = shp_plugin_factory_create ("timer", "/clock/timer");

    /* load ds1820digitemp plugin for obtaining temperature readings */
    temperature = shp_plugin_factory_create ("ds1820digitemp",
        "/home/floor1/LivingRoom/Temperature");
    g_object_set (G_OBJECT (temperature), "config-dir", "/home/pi/digitemp/",
        NULL);
    g_object_set (G_OBJECT (temperature), "device-id", "2", NULL);

    /* load telldus plugin for controlling heater */
    telldus = shp_plugin_factory_create ("telldus",
        "/home/floor1/LivingRoom/Heater");
    g_object_set (G_OBJECT (telldus), "device-id", 2, NULL);

    /* create the group and add the event bus, the controller and the plugins to
     * it */
    bus = shp_bus_new ();
    group = shp_group_new (bus);
    controller = shp_controller_new ();
    shp_group_add (group, SHP_COMPONENT (controller));
    shp_group_add (group, SHP_COMPONENT (rest));
    shp_group_add (group, SHP_COMPONENT (timer));
    shp_group_add (group, SHP_COMPONENT (temperature));
    shp_group_add (group, SHP_COMPONENT (telldus));

    /* create scene with one event */
    scene = shp_scene_new (g_object_ref (bus));
    event = shp_message_new_command ("/home/floor1/LivingRoom/Heater");
    shp_message_add_string (event, "command", "on");
    shp_scene_add_event (scene, event);

    /* create the 2 conditions to be checked before activating the scene */
    condition_temp = shp_condition_new ("/home/floor1/LivingRoom/Temperature");
    shp_condition_add_double_option (condition_temp, "temperature", 15,
        SHP_CONDITION_OPERATOR_GT);

    condition_time = shp_condition_new ("/clock/timer");
    complex_type = shp_complextype_factory_create ("timer.time");
    shp_complextype_add_integer (complex_type, "hour", 19);
    shp_complextype_add_integer (complex_type, "minutes", 45);
    shp_condition_add_complextype_option (condition_time, "datetime",
        complex_type, SHP_CONDITION_OPERATOR_GT);

    /* add the 2 conditions and the scene to a rule */
    rule = shp_rule_new ();
    shp_rule_add_condition (rule, condition_temp);
    shp_rule_add_condition (rule, condition_time);
    shp_rule_set_scene (rule, scene);

    /* let the controller know about our new rule */
    shp_controller_add_rule (controller, rule);

    /* now start the group */
    shp_component_start (SHP_COMPONENT (group));

    /* the group owns and manages all objects added to it, they will be
     * automatically freed when the group itself is freed */

Example 2:
----------

Turn off all heaters in the Living room remotely. Extend Example 1 with the
lines below:


    /* load telldus plugins for controlling heaters */
    telldus = shp_plugin_factory_create ("telldus",
        "/home/floor1/LivingRoom/Heater1");
    g_object_set (G_OBJECT (telldus), "device-id", 2, NULL);
    shp_group_add (group, SHP_COMPONENT (telldus));

    telldus2 = shp_plugin_factory_create ("telldus",
        "/home/floor1/LivingRoom/Heater2");
    g_object_set (G_OBJECT (telldus2), "device-id", 1, NULL);
    shp_group_add (group, SHP_COMPONENT (telldus2));

    /* load scenectl plugin for turning off all heaters in the Living room
     * simultaneously through the REST API */
    scenectl = shp_plugin_factory_create ("scenectl",
        "/home/floor1/LivingRoom/TurnHeatersOff");
    scene = shp_scene_new (g_object_ref (bus));
    event = shp_message_new_command ("/home/floor1/LivingRoom/Heater1");
    shp_message_add_string (event, "command", "off");
    shp_scene_add_event (scene, event);
    event = shp_message_new_command ("/home/floor1/LivingRoom/Heater2");
    shp_message_add_string (event, "command", "off");
    shp_scene_add_event (scene, event);
    g_object_set (G_OBJECT (scenectl), "scene", scene, NULL);
    shp_group_add (group, SHP_COMPONENT (scenectl));

To turn off both heaters simultaneously call
"/home/floor1/LivingRoom/TurnHeatersOff" as shown below.


Accessing the REST API:
-----------------------

The API is provided by the "rest" plugin and returns Json responses.
It is automatically enabled when the plugin is loaded.

To display all components running on the system:
GET http://192.168.0.240:6666/

>output:

    {
        "/clock/timer":{
            "month":6,
            "rest.timestamp":"2016-06-22 09-25-02",
            "year":2016,
            "hour":9,
            "day":22,
            "week_day":3,
            "seconds":2,
            "minutes":25,
            "name":"timer"
        },
        "/home/floor1/Garage/Temperature":{
            "rest.timestamp":"2016-06-22 09-24-56",
            "temperature":17.100000,
            "device-id":"1",
            "name":"ds1820digitemp"
        },
        "/home/floor1/LivingRoom/Temperature":{
            "rest.timestamp":"2016-06-22 09-24-56",
            "temperature":20.600000,
            "device-id":"2",
            "name":"ds1820digitemp"
        },
        "/home/floor1/Bedroom1/Temperature":{
            "rest.timestamp":"2016-06-22 09-24-56",
            "temperature":20.500000,
            "device-id":"3",
            "name":"ds1820digitemp"
        },
        "/home/floor1/Bedroom2/Temperature":{
            "rest.timestamp":"2016-06-22 09-24-56",
            "temperature":22.200001,
            "device-id":"4",
            "name":"ds1820digitemp"
        },
        "/home/floor1/StorageRoom/Temperature":{
            "rest.timestamp":"2016-06-22 09-24-56",
            "temperature":19.400000,
            "device-id":"0",
            "name":"ds1820digitemp"
        },
        "/home/floor1/LivingRoom/Heater":{
            "status":"on",
            "device-id":2,
            "rest.timestamp":"2016-06-22 09-24-56",
            "name":"telldus"
        }
    }

To display all sensors in the Living room on the 1st floor:
GET http://192.168.0.240:6666/home/floor1/LivingRoom/

>output:

    {
        "/home/floor1/LivingRoom/Temperature":{
            "rest.timestamp":"2016-06-22 09-24-56",
            "temperature":20.600000,
            "device-id":"2",
            "name":"ds1820digitemp"
        },
        "/home/floor1/LivingRoom/Heater":{
            "status":"on",
            "device-id":2,
            "rest.timestamp":"2016-06-22 09-24-56",
            "name":"telldus"
        }
    }

To display status for the Heater in the Living room:
GET http://192.168.0.240:6666/home/floor1/LivingRoom/Heater

>output:

    {
        "/home/floor1/LivingRoom/Heater":{
            "status":"on",
            "device-id":2,
            "rest.timestamp":"2016-06-22 09-24-56",
            "name":"telldus"
        }
    }

To display history of all status updates for a particular sensor:
GET http://192.168.0.240:6666/home/floor1/LivingRoom/Temperature?history

>output:

    {
        "/home/floor1/LivingRoom/Temperature":[
            {
                "rest.timestamp":"2016-06-22 09-32-51",
                "temperature":20.800000,
                "device-id":"2",
                "name":"ds1820digitemp"
            },
            {
                "rest.timestamp":"2016-06-22 09-31-51",
                "temperature":20.800000,
                "device-id":"2",
                "name":"ds1820digitemp"
            },
            {
                "rest.timestamp":"2016-06-22 09-30-51",
                "temperature":20.800000,
                "device-id":"2",
                "name":"ds1820digitemp"
            },
            {
                "rest.timestamp":"2016-06-22 09-29-51",
                "temperature":20.600000,
                "device-id":"2",
                "name":"ds1820digitemp"
            },
            {
                "rest.timestamp":"2016-06-22 09-28-51",
                "temperature":20.600000,
                "device-id":"2",
                "name":"ds1820digitemp"
            },
            {
                "rest.timestamp":"2016-06-22 09-27-51",
                "temperature":20.600000,
                "device-id":"2",
                "name":"ds1820digitemp"
            },
            {
                "rest.timestamp":"2016-06-22 09-26-51",
                "temperature":20.600000,
                "device-id":"2",
                "name":"ds1820digitemp"
            },
            {
                "rest.timestamp":"2016-06-22 09-25-51",
                "temperature":20.600000,
                "device-id":"2",
                "name":"ds1820digitemp"
            },
            {
                "rest.timestamp":"2016-06-22 09-24-56",
                "temperature":20.600000,
                "device-id":"2",
                "name":"ds1820digitemp"
            }
        ]
    }

To activate the Heater in the Living room on floor 1:
POST http://192.168.0.240:6666/home/floor1/LivingRoom/Heater

To activate scene "TurnHeatersOff":
POST http://192.168.0.240:6666/home/floor1/LivingRoom/TurnHeatersOff
